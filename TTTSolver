package cs1302.hw09;

import java.util.Scanner;

/**                                                                                                                                                                                            
 * A Tic-Tac-Toe Solver class.                                                                                                                                                                 
 */
public class TTTSolver {

    /**                                                                                                                                                                                        
     * The entry point for the program.                                                                                                                                                        
     * @param args command-line arguments                                                                                                                                                      
     */
    static int count = 0;

    /**                                                                                                                                                                                        
     * Counts all possible wins for player given.                                                                                                                                              
     * @param board the string                                                                                                                                                                 
     * @param player the player whom could win                                                                                                                                                 
     * @return count the number of possible wins                                                                                                                                               
     */
    public static int countAllWinningBoards(String board, char player) {
        if (TTTUtility.isCat(board) == true || TTTUtility.isWinner(board, 'X') == true
            || TTTUtility.isWinner(board, 'O') == true) {
            if (TTTUtility.isWinner(board, player) == true) {
                count++;
            }
            return count;
        } else {
            char turn = TTTUtility.whoseTurn(board);
            for (int i = 0; i < 9; i++) {
                if (board.charAt(i) == '-') {
                    String board1 = board.substring(0, i) + turn + board.substring(i + 1, 9);
                    countAllWinningBoards(board1, player);
                }
            }
        }
        return count;
    }

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        System.out.println("Please enter an initial board state " +
                           "using 9 consecutive characters. Valid "  +
                           "characters are X, O, and -.");
        String board = promptBoard(input);
        boolean tie = TTTUtility.isCat(board);
        if (tie == true) {
            System.out.println("True");
        } else {
            System.out.println("False");
            }
        printAllBoards(board);
        System.out.print(countAllWinningBoards(board, 'X'));
    } // main                                                                                                                                                                                  

    /**                                                                                                                                                                                        
     * Prompt the user for a valid board configuration.                                                                                                                                        
     * @param input an input scanner                                                                                                                                                           
     * @return the board configuration                                                                                                                                                         
     */
    public static String promptBoard(Scanner input) {
        String board = input.nextLine();
        while (!TTTUtility.validGame(board)) {
            System.out.println("Invalid board. Try again.");
            board = input.nextLine();
        } // while                                                                                                                                                                             
        return board;
    } // promptBoard                                                                                                                                                                           

    /**                                                                                                                                                                                        
     * Given an initial board state, this method prints                                                                                                                                        
     * all board states that can be reached via valid                                                                                                                                          
     * sequence of moves by each player. Therefore, the                                                                                                                                        
     * printout includes both intermediate board states                                                                                                                                        
     * as well as completed board states.                                                                                                                                                      
     *                                                        
     */

    public static void printAllBoards(String board) {
        if (TTTUtility.isCat(board) == true || TTTUtility.isWinner(board, 'X') == true
            || TTTUtility.isWinner(board, 'O') == true) {
            System.out.println(board);
            return;
        } else {
            char turn = TTTUtility.whoseTurn(board);
            for (int i = 0; i < 9; i++) {
                if (board.charAt(i) == '-') {
                    String board1 = board.substring(0, i) + turn + board.substring(i + 1, 9);
                    printAllBoards(board1);
                }
            }
        }
    } // printAllBoards                                                                                                                                                                        

} // TTTSolver                                                                                                                                                                                 



